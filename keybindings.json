// Place your key bindings in this file to override the defaults
[
  {
    "key": "cmd+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && editorTextFocus"
  },
  {
    "key": "cmd+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && editorTextFocus"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  { // make cursor back to editor
		"key": "cmd+m",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "!terminalFocus"
	},
	{ // make cursor back to editor
		"key": "cmd+k",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "panelFocus && activePanel"
	},
	{ // make cursor back to editor
		"key": "cmd+h",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "panelFocus && activePanel"
	},
  { // window move down
    "key": "cmd+j",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
    "args": {
      "after": ["<c-w>", "j"],
    }
  },
  { // window move up
    "key": "cmd+k",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
    "args": {
      "after": ["<c-w>", "k"]
    }
  },
  { // window move left
    "key": "cmd+h",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
    "args": {
      "after": ["<c-w>", "h"]
    }
  },
  { // window move right
    "key": "cmd+l",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
    "args": {
      "after": ["<c-w>", "l"]
    }
  },
  { // open file expoler use which key
		"key": "e",
		"command": "whichkey.triggerKey",
		"when": "whichkeyVisible && sideBarVisible && explorerViewletVisible",
		"args": {
			"key": "e",
			"when": "sideBarVisible && explorerViewletVisible"
		},
	},
  { // open outline expoler use which key
		"key": "o",
		"command": "whichkey.triggerKey",
		"when": "whichkeyVisible && outlinerExplorerView.active && view.outline.visible",
		"args": {
			"key": "o",
			"when": "outlinerExplorerView.active && view.outline.visible"
		},
	},
  { // rename file
		"key": "r",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
  { // disable old style rename shortcut
		"key": "enter",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
  { // move down
		"key": "j",
		"command": "list.focusDown",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
  { // move up
		"key": "k",
		"command": "list.focusUp",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
  { // move down at problem open
		"key": "cmd+n",
		"command": "list.focusDown",
		"when": "panelFocus && activePanel == 'workbench.panel.markers' "
	},
	{ // move up at problem open
		"key": "cmd+p",
		"command": "list.focusUp",
		"when": "panelFocus && activePanel == 'workbench.panel.markers' "
	},
  { // open selected explorer item
		"key": "enter",
		"command": "list.select",
		"when": "explorerViewletVisible && filesExplorerFocus"
	},
  { // open reference localtion without quit reference view
		"key": "o",
		"command": "revealReference",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
  { // preview reference down
		"key": "j",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"list.focusDown",
				// "list.toggleExpand",	// TODO: this will coallse the tree node
			]
		},
		"when": "listFocus && !inputFocus && panelFocus && !inDebugRepl && references-view.canNavigate"
	},
	{ // preview reference up
		"key": "k",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"list.focusUp",
				// "list.toggleExpand", // TODO: this will coallse the tree node
			]
		},
		"when": "listFocus && !inputFocus && panelFocus && !inDebugRepl && references-view.canNavigate"
	},
  { // open reference location with quit reference view
		"key": "enter",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"revealReference",
				"closeReferenceSearch"
			]
		},
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
  { // do not close debug view when press enter
		"key": "enter",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"list.select",
				"workbench.action.togglePanel"
			]
		},
		"when": "panelFocus && !inDebugRepl && activePanel!='workbench.panel.markers'"
	},
  { // toggle folder expand
		"key": "o",
		"command": "list.toggleExpand",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
  { // collapse folder
		"key": "h",
		"command": "list.collapse",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
  { // new file
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
  { // new folder
		"key": "shift+a",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
  { // delete file or folder
		"key": "d",
		"command": "deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  { // toggle terminal
		"key": "cmd+\\",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
  { // maxmize terminal
		"key": "cmd+m",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "terminalFocus"
	},
	{ // active which key
		"key": "space",
		"command": "whichkey.show",
		"when": "!inputFocus"
	},
	{
		"key": "d",
		"command": "git.cleanAll",
		"when": "!inputFocus && workbench.scm.active"
	},
	{
		"key": "c",
		"when": "!inputFocus && workbench.scm.active",
		"command": "git.clean"
	}
]
